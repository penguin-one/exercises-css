---

name: Медиа запросы
theory: |
  Для просмотра интернет-страниц используется множество устройств с различным размером и разрешений экрана: компьютеры, смартфоны, планшеты, ноутбуки и так далее. Такое количество устройств требует от разработчиков умение подстраивать свои страницы под разные вариации разрешений.

  Один из способов изменить стили в зависимости от разрешения — использовании специальных CSS правил, которые срабатывают при выполнении заданных условий. Такими условиями могут быть:

  * Ширина или высота `viewport`
  * Горизонтальная или вертикальная ориентация экрана
  * Тип устройства

  и другие.

  В этом уроке узнаем о правиле `@media` и рассмотрим несколько стандартных вариантов применения. Задачей урока не является объяснить все тонкости работы с адаптивностью страниц, поэтому сосредоточимся на ключевых вещах.

  ## Правило media

  Все медиа запросы строятся по похожему шаблону и используют конструкцию `@media`:

  ```css
  @media (условие) {
    /* Правила */
  }
  ```

  Какие правила указываются внутри конструкции `@media`? Абсолютно любые! Думайте об этом, как о новом CSS файле, со своими селекторами, свойствами. Например, для определённого условия нужно изменить цвет текста элементов с классом `.text` на чёрный. Тогда конструкция примет такой образ:

  ```css
  @media (условие) {
    .text {
      color: #000000;
    }
  }
  ```

  А какие бывают условия? Представим, что нужно изменить цвет текста, если ширина `viewport` меньше или равно 700 пикселей. Тогда указывается правило `max-width: 700px`. Очень похоже на обычное CSS правило, которое определит, что свойства должны отрабатывать, если ширина `viewport` 700 пикселей или меньше:

  ```css
  @media (max-width: 700px) {
    .text {
      color: #000000;
    }
  }
  ```

  С приходом мобильных телефонов остро возникла необходимость работы с тем, как пользователь держит телефон: вертикально или горизонтально. Когда пользователь держит телефон вертикально, то высота экрана больше, чем его ширина. При горизонтальном использовании наоборот — ширина больше высоты. Это требует правильного выстраивания блоков на странице, чтобы ей было удобно пользоваться из любого положения.

  В медиа запросах есть специальное условие `orientation`, которое может иметь одно из двух значений:

  * `portrait` — портретная ориентация устройства. Высота экрана **больше**, чем его ширина
  * `landscape` — альбомная ориентация устройства. Высота экрана **меньше**, чем его ширина

  Пусть для портретной ориентации текст будет белым, а для альбомной чёрным:

  ```css
  @media (orientation: portrait) {
    .text {
      color: #ffffff;
    }
  }

  @media (orientation: landscape) {
    .text {
      color: #000000;
    }
  }
  ```

  Медиа запросы могут быть куда сложнее, и учитывать множество разных вариаций. В рамках одного урока это не описать, но вы уже познакомились с тем, как строятся медиа запросы, для чего они существуют и как добавить их в свой CSS файл

instructions: |
  Добавьте белый цвет текста у параграфов с классом `white-text-mobile` для устройств с шириной экрана не больше 750 пикселей. Стили запишите в теге `<style>`
